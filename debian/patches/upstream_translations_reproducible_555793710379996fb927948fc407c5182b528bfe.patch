From 555793710379996fb927948fc407c5182b528bfe Mon Sep 17 00:00:00 2001
From: TheAssassin <theassassin@assassinate-you.net>
Date: Sat, 2 Mar 2019 00:54:07 +0100
Subject: [PATCH] Fix translations induced reproducibility issues

Sorry, @ScarlettGatelyMoore! I wasted our both time.
---
 i18n/CMakeLists.txt             | 16 ++++++++++++++--
 resources/CMakeLists.txt        | 10 ----------
 src/i18n/CMakeLists.txt         |  4 +---
 src/i18n/translationmanager.cpp | 11 +++++++----
 4 files changed, 22 insertions(+), 19 deletions(-)

diff --git a/i18n/CMakeLists.txt b/i18n/CMakeLists.txt
index 3aebd52..56dc895 100644
--- a/i18n/CMakeLists.txt
+++ b/i18n/CMakeLists.txt
@@ -49,10 +49,12 @@ endfunction()

 file(GLOB TS_FILES *.ts)

+set(target_dir ${CMAKE_CURRENT_BINARY_DIR}/generated/l10n)
+
 foreach(TS_FILE IN LISTS TS_FILES)
     get_filename_component(TS_FILENAME ${TS_FILE} NAME)
     string(REPLACE .ts .qm QM_FILENAME ${TS_FILENAME})
-    ail_generate_qm(${TS_FILENAME} ../resources/l10n/${QM_FILENAME})
+    ail_generate_qm(${TS_FILENAME} ${target_dir}/${QM_FILENAME})
 endforeach()

 # deploy JSON files
@@ -62,8 +64,18 @@ foreach(JSON_FILE IN LISTS JSON_FILES)
     get_filename_component(JSON_FILENAME ${JSON_FILE} NAME)
     add_custom_command(
         TARGET l10n POST_BUILD
-        COMMAND ${CMAKE_COMMAND} -E copy ${JSON_FILENAME} ../resources/l10n/${JSON_FILENAME}
+        COMMAND ${CMAKE_COMMAND} -E copy ${JSON_FILENAME} ${target_dir}/${JSON_FILENAME}
         WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
         MAIN_DEPENDENCY ${JSON_FILE}
     )
 endforeach()
+
+
+# empty directories aren't tracked by Git
+# therefore the directory needs to be created by CMake
+file(MAKE_DIRECTORY ${target_dir})
+
+install(
+    DIRECTORY ${target_dir}
+    DESTINATION ${CMAKE_INSTALL_DATADIR}/appimagelauncher COMPONENT APPIMAGELAUNCHER
+)
diff --git a/resources/CMakeLists.txt b/resources/CMakeLists.txt
index 5496472..a15f4c2 100644
--- a/resources/CMakeLists.txt
+++ b/resources/CMakeLists.txt
@@ -13,16 +13,6 @@ install(
     DESTINATION ${CMAKE_INSTALL_DATADIR}/applications COMPONENT APPIMAGELAUNCHER
 )

-# empty directories aren't tracked by Git
-# therefore the directory needs to be created by CMake
-file(MAKE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/l10n)
-
-install(
-    DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/l10n
-    DESTINATION ${CMAKE_INSTALL_DATADIR}/appimagelauncher COMPONENT APPIMAGELAUNCHER
-)
-
-
 set(INSTALL_MAINTAINER_SCRIPTS OFF CACHE BOOL "")

 # install maintainer scripts that distro packagers might find useful
diff --git a/src/i18n/CMakeLists.txt b/src/i18n/CMakeLists.txt
index ec03ee9..ed68fd5 100644
--- a/src/i18n/CMakeLists.txt
+++ b/src/i18n/CMakeLists.txt
@@ -1,6 +1,4 @@
 add_library(translationmanager translationmanager.cpp translationmanager.h)
 target_link_libraries(translationmanager PUBLIC Qt5::Core Qt5::Widgets)
-target_compile_definitions(translationmanager
-    PRIVATE -DCMAKE_PROJECT_SOURCE_DIR="${PROJECT_SOURCE_DIR}"
-)
 target_include_directories(translationmanager PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
+add_dependencies(translationmanager l10n)
diff --git a/src/i18n/translationmanager.cpp b/src/i18n/translationmanager.cpp
index 07c2ae8..7759879 100644
--- a/src/i18n/translationmanager.cpp
+++ b/src/i18n/translationmanager.cpp
@@ -38,13 +38,16 @@ TranslationManager::~TranslationManager() {

 QString TranslationManager::getTranslationDir() {
     // first we need to find the translation directory
-    // if this is run from the source tree, we try a path that can only work within the repository
+    // if this is run from the build tree, we try a path that can only work within the build directory
     // then, we try the expected install location relative to the main binary
-    auto translationDir = QString(CMAKE_PROJECT_SOURCE_DIR) + "/resources/l10n";
+    const auto binaryDirPath = QApplication::applicationDirPath();

-    if (!QDir(translationDir).exists()) {
-        const auto binaryDirPath = QApplication::applicationDirPath();
+    // previously the path to the repo root dir was embedded to allow for finding the compiled translations
+    // this lead to irreproducible builds
+    // therefore the files are now generated within the build dir, and we guess the path based on the binary location
+    auto translationDir = binaryDirPath + "/../../i18n/generated/l10n";

+    if (!QDir(translationDir).exists()) {
         translationDir = binaryDirPath + "/../share/appimagelauncher/l10n";
     }
