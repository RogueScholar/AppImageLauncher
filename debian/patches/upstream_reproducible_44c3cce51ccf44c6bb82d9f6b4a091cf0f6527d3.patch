From 44c3cce51ccf44c6bb82d9f6b4a091cf0f6527d3 Mon Sep 17 00:00:00 2001
From: TheAssassin <theassassin@assassinate-you.net>
Date: Mon, 11 Feb 2019 01:45:15 +0100
Subject: [PATCH] Include reproducible builds snippet from libappimage

---
 CMakeLists.txt                  |  2 ++
 cmake/reproducible_builds.cmake | 34 +++++++++++++++++++++++++++++++++
 2 files changed, 36 insertions(+)
 create mode 100644 cmake/reproducible_builds.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5129f31..f456e2f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,8 @@ set(APPIMAGELAUNCHER_VERSION ${V_MAJOR}.${V_MINOR}.${V_PATCH}${V_SUFFIX})

 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/cmake/modules)

+include(cmake/reproducible_builds.cmake)
+
 # support for ccache
 # call CMake with -DUSE_CCACHE=ON to make use of it
 set(USE_CCACHE OFF CACHE BOOL "")
diff --git a/cmake/reproducible_builds.cmake b/cmake/reproducible_builds.cmake
new file mode 100644
index 0000000..7fefaf4
--- /dev/null
+++ b/cmake/reproducible_builds.cmake
@@ -0,0 +1,34 @@
+# this little snippet makes sure that no absolute paths end up in the binaries built by CMake
+# it will replace such paths with relative ones
+# see https://reproducible-builds.org/docs/build-path/ for more information
+
+cmake_minimum_required(VERSION 3.4)
+
+include(CheckCCompilerFlag)
+
+if(CMAKE_BUILD_TYPE STREQUAL Release)
+    message(STATUS "Release build detected, enabling reproducible builds mode")
+    get_filename_component(abs_source_path ${PROJECT_SOURCE_DIR} ABSOLUTE)
+    file(RELATIVE_PATH rel_source_path ${PROJECT_BINARY_DIR} ${PROJECT_SOURCE_DIR})
+
+    set(map_fix ${abs_source_path}=${rel_source_path})
+
+    # can only add flags when the compiler supports them
+    # known working compilers: GCC >= 8
+    foreach(type debug macro)
+        set(flag_name -f${type}-prefix-map)
+        set(flags ${flag_name}=${map_fix})
+
+        check_c_compiler_flag(${flags} ${type}_prefix_map_flag_available)
+
+        if(${type}_prefix_map_flag_available)
+            set(extra_flags "${extra_flags} ${flags}")
+        else()
+            message(WARNING "${flag_name} not available, cannot enable full reproducible builds mode")
+        endif()
+    endforeach()
+
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${extra_flags}")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${extra_flags}")
+    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${extra_flags}")
+endif()
